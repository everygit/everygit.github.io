(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{369:function(s,t,e){"use strict";e.r(t);var r=e(42),a=Object(r.a)({},(function(){var s=this,t=s.$createElement,e=s._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h1",{attrs:{id:"nginx-配置-https"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nginx-配置-https"}},[s._v("#")]),s._v(" nginx 配置 HTTPS")]),s._v(" "),e("p",[s._v("nginx 配置证书是一个很好的选择，因为即使你只是使用了nginx的反向代理功能，仍然需要在nginx上配置https")]),s._v(" "),e("h2",{attrs:{id:"配置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#配置"}},[s._v("#")]),s._v(" 配置")]),s._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("    server {\n        listen       8012   ssl;\n        server_name  192.168.41.16;\n\n        ssl_certificate ../cert/server.crt;  # 指定证书的位置，绝对路径\n        ssl_certificate_key ../cert/server.key;  # 绝对路径，同上\n        ssl_session_timeout 5m;\n        ssl_protocols TLSv1 TLSv1.1 TLSv1.2; #按照这个协议配置\n        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE;#按照这个套件配置\n        ssl_prefer_server_ciphers on;\n        \n        # 其他的配置\n    }\n")])])]),e("h2",{attrs:{id:"重启"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#重启"}},[s._v("#")]),s._v(" 重启")]),s._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[s._v("nginx -s reload\n")])])])])}),[],!1,null,null,null);t.default=a.exports}}]);