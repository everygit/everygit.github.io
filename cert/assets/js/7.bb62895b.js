(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{359:function(t,e,r){"use strict";r.r(e);var s=r(42),n=Object(s.a)({},(function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"概述"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#概述"}},[t._v("#")]),t._v(" 概述")]),t._v(" "),r("p",[t._v("在前面因为一个项目需要跨站请求，而现在的跨站请求需要 "),r("code",[t._v("SameSite=None")]),t._v(" ，所以需要 HTTPS 来发送请求；在开发环境下并没有 HTTPS 证书，所以当时的方案是服务器随便使用一个证书，然后利用 fiddler 的自签名证书重新签发服务器证书的功能来实现；当时没有经过测试，所以也没什么了。")]),t._v(" "),r("p",[t._v("现在要使用 service worker ，那个提交测试就需要一个完整的测试环境，所以这一次打算创建一个自签名的根证书，再创建服务器证书，测试人员电脑安装根证书后，可以完全模拟出线上的环境。")])])}),[],!1,null,null,null);e.default=n.exports}}]);