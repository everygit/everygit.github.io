(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{362:function(e,s,t){"use strict";t.r(s);var v=t(42),_=Object(v.a)({},(function(){var e=this,s=e.$createElement,t=e._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"response"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#response"}},[e._v("#")]),e._v(" Response")]),e._v(" "),t("p",[e._v("呈现了对一次请求的响应数据。")]),e._v(" "),t("h2",{attrs:{id:"属性"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#属性"}},[e._v("#")]),e._v(" 属性")]),e._v(" "),t("table",[t("thead",[t("tr",[t("th",[e._v("名称")]),e._v(" "),t("th",[e._v("描述")])])]),e._v(" "),t("tbody",[t("tr",[t("td",[e._v("Response.headers")]),e._v(" "),t("td",[e._v("包含此 Response 所关联的 Headers 对象。")])]),e._v(" "),t("tr",[t("td",[e._v("Response.ok")]),e._v(" "),t("td",[e._v("包含了一个布尔值，标示该 Response 成功（HTTP 状态码的范围在 200-299）。")])]),e._v(" "),t("tr",[t("td",[e._v("Response.redirected")]),e._v(" "),t("td",[e._v("表示该 Response 是否来自一个重定向，如果是的话，它的 URL 列表将会有多个条目。")])]),e._v(" "),t("tr",[t("td",[e._v("Response.status")]),e._v(" "),t("td",[e._v("包含 Response 的状态码 （例如 200 表示成功）。")])]),e._v(" "),t("tr",[t("td",[e._v("Response.statusText")]),e._v(" "),t("td",[e._v("包含了与该 Response 状态码一致的状态信息（例如，OK对应 200）。")])]),e._v(" "),t("tr",[t("td",[e._v("Response.type")]),e._v(" "),t("td",[e._v("包含 Response 的类型（例如，basic、cors）。")])]),e._v(" "),t("tr",[t("td",[e._v("Response.url")]),e._v(" "),t("td",[e._v("包含 Response 的URL。")])]),e._v(" "),t("tr",[t("td",[e._v("Response.useFinalURL")]),e._v(" "),t("td",[e._v("包含了一个布尔值，来标示这是否是该 Response 的最终 URL。")])]),e._v(" "),t("tr",[t("td",[e._v("Body.body")]),e._v(" "),t("td",[e._v("一个简单的 getter，用于暴露一个 ReadableStream 类型的 body 内容。")])]),e._v(" "),t("tr",[t("td",[e._v("Body.bodyUsed")]),e._v(" "),t("td",[e._v("包含了一个布尔值来标示该 Response 是否读取过 Body。")])])])]),e._v(" "),t("h2",{attrs:{id:"方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#方法"}},[e._v("#")]),e._v(" 方法")]),e._v(" "),t("table",[t("thead",[t("tr",[t("th",[e._v("名称")]),e._v(" "),t("th",[e._v("描述")])])]),e._v(" "),t("tbody",[t("tr",[t("td",[e._v("Response.clone()")]),e._v(" "),t("td",[e._v("创建一个 Response 对象的克隆。")])]),e._v(" "),t("tr",[t("td",[e._v("Response.error()")]),e._v(" "),t("td",[e._v("返回一个绑定了网络错误的新的 Response 对象。")])]),e._v(" "),t("tr",[t("td",[e._v("Response.redirect()")]),e._v(" "),t("td",[e._v("用另一个 URL 创建一个新的 Response。")])]),e._v(" "),t("tr",[t("td",[e._v("Body.arrayBuffer()")]),e._v(" "),t("td",[e._v("读取 Response 对象并且将它设置为已读（因为 Responses 对象被设置为了 stream 的方式，所以它们只能被读取一次），并返回一个被解析为 ArrayBuffer 格式的 Promise 对象。")])]),e._v(" "),t("tr",[t("td",[e._v("Body.blob()")]),e._v(" "),t("td",[e._v("读取 Response 对象并且将它设置为已读（因为 Responses 对象被设置为了 stream 的方式，所以它们只能被读取一次），并返回一个被解析为 Blob 格式的 Promise 对象。")])]),e._v(" "),t("tr",[t("td",[e._v("Body.formData()")]),e._v(" "),t("td",[e._v("读取Response 对象并且将它设置为已读（因为 Responses 对象被设置为了 stream 的方式，所以它们只能被读取一次），并返回一个被解析为 FormData 格式的 Promise 对象。")])]),e._v(" "),t("tr",[t("td",[e._v("Body.json()")]),e._v(" "),t("td",[e._v("读取 Response 对象并且将它设置为已读（因为 Responses 对象被设置为了 stream 的方式，所以它们只能被读取一次），并返回一个被解析为 JSON 格式的 Promise 对象。")])]),e._v(" "),t("tr",[t("td",[e._v("Body.text()")]),e._v(" "),t("td",[e._v("读取 Response 对象并且将它设置为已读（因为 Responses 对象被设置为了 stream 的方式，所以它们只能被读取一次），并返回一个被解析为 USVString 格式的 Promise 对象。")])])])])])}),[],!1,null,null,null);s.default=_.exports}}]);