(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{382:function(t,a,n){"use strict";n.r(a);var e=n(45),i=Object(e.a)({},(function(){var t=this,a=t.$createElement,n=t._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"音高和反音高"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#音高和反音高"}},[t._v("#")]),t._v(" 音高和反音高")]),t._v(" "),n("blockquote",[n("p",[t._v("翻译的啥玩意，参考原文吧 https://reactnavigation.org/docs/pitch")])]),t._v(" "),n("p",[t._v("在考虑是否使用项目来理解项目开发人员在构建项目时所进行的权衡时，这很有用。它明确为您解决了哪些问题，而忽略了哪些问题？目前该项目有哪些局限性以及人们遇到的常见问题？这些是我们认为在为您的项目做出重要的技术决策时应该回答的问题，因此，我们在此处尽可能以“音高”的形式记录了对这些问题的回答（为什么？应该使用它）和“反间距”（为什么不应该使用它）。如果您认为我们省略了重要信息，请提交请求请求！")]),t._v(" "),n("p",[t._v("沥青＃\nReact Navigation 在库本身中不包含任何本机代码，但是我们使用许多本机库（例如 Reanimated，Gesture Handler，Screens 等）来实现高效的动画和手势。根据导航器的不同，许多 UI 组件都是在 React Native 原语之上以 JavaScript 编写的。这有很多好处：\n轻松进行 OTA 更新\n可调试的\n可客制化\n大多数应用会大量自定义导航，而要使用包装本机导航的 API 来实现此目的，则需要编写大量本机代码。在 React Navigation 中，我们提供了完全用 JavaScript 编写的导航器（例如 Stack Navigator）和在平台导航原语之上实现的导航器（例如 Native Stack Navigator）。这使您可以选择适合您的用例的导航器，具体取决于您是希望本机平台行为还是完全可定制性。\n编写与标准导航器干净集成的自己的导航器很容易，也可以派生标准导航器并以您想要的确切外观创建自己的版本。\n反基音＃\n改进可能需要重大更改。我们正在努力使“容易的事情变得容易而困难的事情成为可能”，这可能需要我们有时更改 API。\n许多导航员并不直接使用 iOS 和 Android 上的本机导航 API；相反，他们使用最低级别的代码，然后在顶部重新创建 API 的某些子集。这是一个有意识的选择，目的是使用户可以自定义导航体验的任何部分（因为它是用 JavaScript 实现的）并能够调试他们遇到的问题而无需学习 Objective C / Swift / Java / Kotlin 。\n如果您需要确切的平台行为，则可以选择使用使用本机平台基元的导航器（例如，本机堆栈导航器），或使用包装平台 API 的另一个库。在替代方案中详细了解这些内容，并确保在深入了解替代方案之前进行权衡！\n您可能还需要考虑其他限制，有关更多详细信息，请参见限制。")])])}),[],!1,null,null,null);a.default=i.exports}}]);